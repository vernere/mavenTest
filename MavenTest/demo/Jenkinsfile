pipeline {
    agent any
        environment {
            PATH = "C:\\Program Files\\Docker\\Docker\\resources\\bin;${env.PATH}"

            // Define Docker Hub credentials ID
            DOCKERHUB_CREDENTIALS_ID = 'Docker_Hub'
            // Define Docker Hub repository name
            DOCKERHUB_REPO = 'vernere/mavenTest'
            // Define Docker image tag
            DOCKER_IMAGE_TAG = 'latest'
        }
    tools {
        maven 'Maven3' // Ensure Maven is installed and configured in Jenkins
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out source code...'
                git branch: 'main', url: 'https://github.com/vernere/mavenTest.git'
            }
        }
        stage('Build') {
            steps {
                echo 'Building...'
                dir('MavenTest/demo') {
                    bat 'mvn clean install'
                }
            }
        }
        stage('Test') {
            steps {
                echo 'Testing...'
                dir('MavenTest/demo') {
                    bat 'mvn test'
                }
            }
        }
        stage('Code coverage') {
            steps {
                echo 'Calculating code coverage...'
                dir('MavenTest/demo') {
                    bat 'mvn jacoco:report'
                }
            }
        }
        stage('Publish test Reports') {
            steps {
                echo 'Publishing reports...'
                junit 'MavenTest/demo/target/surefire-reports/*.xml'
            }
        }
        stage('publish coverage reports') {
            steps {
                echo 'Publishing coverage reports...'
                jacoco()
            }
        }
                            steps {
                        bat 'docker build -t %DOCKERHUB_REPO%:%DOCKER_IMAGE_TAG% .'
                    }
                }

                stage('Push Docker Image to Docker Hub') {
                    steps {
                        withCredentials([usernamePassword(credentialsId: "${DOCKERHUB_CREDENTIALS_ID}", usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                            bat '''
                                docker login -u %DOCKER_USER% -p %DOCKER_PASS%
                                docker push %DOCKERHUB_REPO%:%DOCKER_IMAGE_TAG%
                            '''
                        }
                    }
                }
    }
}